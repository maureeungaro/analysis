#!/usr/bin/env zsh

export DYLD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

export DATA_PATH=/Volumes/e16
export ANA_PATH=/opt/projects/analysis


# if the first option is -h or empty, print help and exit
if [[ $1 == "-h" || $# -eq 0 || $# -lt 3 ]]; then
	echo " "
	echo "Usage:   "
	echo "  >>./go_SEL ORIG_DIR DEST_DIR COMMAND [PAR_FILE]"
	echo "  "
	echo "     ORIG_DIR: Input files directory"
	echo "     DEST_DIR: Output files directory"
	echo "     COMMAND: Command Line"
	echo "     [PAR_FILE]: Parameter File, optional in some cases "
	echo " "
	echo "Examples: "
	echo "./go_SEL $DATA_PATH/fullRuns $DATA_PATH/e_pid   $ANA_PATH/pid/electron/e_pid             $ANA_PATH/pid/electron/electron_id_par.txt   "
	echo "./go_SEL $DATA_PATH/e_pid    $DATA_PATH/p_pid   $ANA_PATH/pid/proton/proton_pid          $ANA_PATH/pid/proton/proton_id_par.txt    "
	echo "./go_SEL $DATA_PATH/p_pid    $DATA_PATH/vertex  $ANA_PATH/vertex/vertex_corr_sel         $ANA_PATH/vertex/vertex_par.txt    "
	echo "./go_SEL $DATA_PATH//vertex  $DATA_PATH//e_fid  $ANA_PATH/fiducial/electron/e_fiducial   $ANA_PATH/fiducial/electron/fiducial_par.txt  "
	echo "./go_SEL $DATA_PATH/e_fid    $DATA_PATH/p_fid   $ANA_PATH/fiducial/proton/p_fiducial     $ANA_PATH/fiducial/proton/fiducial_par.txt  "
	echo "./go_SEL $DATA_PATH/p_fid    $DATA_PATH/e_corr  $ANA_PATH/e_kin_cor/momentum/e_mom_corr  $ANA_PATH/e_kin_cor/momentum/emom_corr_pars.txt  "
	echo "./go_SEL $DATA_PATH/e_corr   $DATA_PATH/pi0s    $ANA_PATH/pi0_selection/pi0_selection    $ANA_PATH/pi0_selection/pi0_selection_pars.txt   "

	echo " "
	echo " GSIM"
	echo "./go_SEL /Volumes/e1-6Proc/gsim/full   /Volumes/e1-6Proc/gsim/e_pid   $ANA_PATH/pid/electron/e_pid            $ANA_PATH/pid/electron/electron_id_par_gsim.txt   "
	echo "./go_SEL /Volumes/e1-6Proc/gsim/e_pid  /Volumes/e1-6Proc/gsim/p_pid   $ANA_PATH/pid/proton/proton_pid         $ANA_PATH/pid/proton/proton_id_par_gsim.txt  "
	echo "./go_SEL /Volumes/e1-6Proc/gsim/p_pid  /Volumes/e1-6Proc/gsim/vertex  $ANA_PATH/vertex/vertex_corr_sel        $ANA_PATH/vertex/vertex_par.txt  "
	echo "./go_SEL /Volumes/e1-6Proc/gsim/vertex /Volumes/e1-6Proc/gsim/e_fid   $ANA_PATH/fiducial/electron/e_fiducial  $ANA_PATH/fiducial/electron/fiducial_par.txt  "
	echo "./go_SEL /Volumes/e1-6Proc/gsim/e_fid  /Volumes/e1-6Proc/gsim/p_fid   $ANA_PATH/fiducial/proton/p_fiducial    $ANA_PATH/fiducial/proton/fiducial_par.txt  "
	echo "./go_SEL /Volumes/e1-6Proc/gsim/p_fid  /Volumes/e1-6Proc/gsim/pi0s    $ANA_PATH/pi0_selection/pi0_selection   $ANA_PATH/pi0_selection/pi0_selection_pars.txt  "

	echo " "
	echo " GSIM elastic"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/full  /akasha/gsim_e1-6/elastic/e_pid $ANA_PATH/pid/electron/e_pid           $ANA_PATH/pid/electron/electron_id_par_gsim.txt"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/e_pid /akasha/gsim_e1-6/elastic/p_pid $ANA_PATH/pid/proton/proton_pid        $ANA_PATH/pid/proton/proton_id_par_gsim.txt"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/p_pid /akasha/gsim_e1-6/elastic/verte $ANA_PATH/vertex/vertex_corr_sel       $ANA_PATH/vertex/vertex_par.txt"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/verte /akasha/gsim_e1-6/elastic/e_fid $ANA_PATH/fiducial/electron/e_fiducial $ANA_PATH/fiducial/electron/fiducial_par.txt"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/e_fid /akasha/gsim_e1-6/elastic/p_fid $ANA_PATH/fiducial/proton/p_fiducial   $ANA_PATH/fiducial/proton/fiducial_par.txt"
	echo "./go_SEL /akasha/gsim_e1-6/elastic/p_fid /akasha/gsim_e1-6/elastic/pi0   $ANA_PATH/pi0_selection/pi0_selection  $ANA_PATH/pi0_selection/pi0_selection_pars_GSIM.txt"
	echo " "
	echo " acceptance calculation:"
	echo "./go_SEL /Volumes/e1-6Proc/gsim/pi0s   /Volumes/e1-6Proc/gsim/pi0_acceptance  $ANA_PATH/acceptance/acc_histos/acc_histos"
	echo " "
	exit 0
fi


ORIG_DIR=$1
DEST_DIR=$2
COMMAND=$3
ROOT_DIR=$DEST_DIR/root
LOG_DIR=$DEST_DIR/log
PAR_FILE="none"

# if 4 arguments, set the last one to PAR_FILE
if [ $# -eq 4 ]; then
	PAR_FILE=$4
	echo " PAR FILE:               "   $PAR_FILE
	# check that PAR_FILE exist
	if [ ! -f $PAR_FILE ]; then
		echo " ERROR: PAR_FILE does not exist: " $PAR_FILE
		exit 1
	fi
fi

# if the file COMMAND doesn't exist, exit
if [ ! -f $COMMAND ]; then
	echo "ERROR: $COMMAND doesn't exist"
	exit 1
fi

mkdir -p $ROOT_DIR
mkdir -p $LOG_DIR

echo " "
echo " Input files directory:  "  $ORIG_DIR
echo " Output files directory: "  $DEST_DIR
echo " ROOT files directory:   "  $ROOT_DIR
echo " Command line:           "  $COMMAND
echo " "

rm -rf DONE_SEL ; touch DONE_SEL
rm -rf TOTA_SEL ; touch TOTA_SEL
rm -rf TODO_SEL ; touch TODO_SEL

# deleting last file created in directory $DEST_DIR
last_file=$(ls -t $DEST_DIR/*.mu | head -1)
if [ -f $last_file ]; then
	echo " Deleting last file: " $last_file
	rm -f $last_file
fi



\ls  $ORIG_DIR  | grep ".mu" | awk -F. '{print $1}' |  sort -u  >> TOTA_SEL
\ls  $DEST_DIR  | grep ".mu" | awk -F. '{print $1}' |  sort -u  >> DONE_SEL
comm -1 -3 DONE_SEL TOTA_SEL                                    >> TODO_SEL

echo " "
echo " Number of files already processed: " `wc DONE_SEL | awk '{print $1}'`
echo " Number of files to process:        " `wc TODO_SEL | awk '{print $1}'`
echo " Total number of files              " `wc TOTA_SEL | awk '{print $1}'`
echo " "

runs_to_process=$(cat TODO_SEL)

for r in $=runs_to_process
do
	rm -rf $LOG_DIR/$r.log

	# if PAR_FILE is different than "none":
	if [ $PAR_FILE != "none" ]; then
		echo " > executing $COMMAND on run: "  $ORIG_DIR/$r.mu  " with output: " $DEST_DIR/$r.mu using pars file $PAR_FILE
		$COMMAND  $ORIG_DIR/$r.mu -BEAM_E=5.754 -TARGET=proton -OUTPUT=$DEST_DIR/$r.mu -ROOT_OUTPUT=$ROOT_DIR/$r.root -PARS_FILE=$PAR_FILE > $LOG_DIR/$r.log
	else
		echo not set yet
	fi

done













